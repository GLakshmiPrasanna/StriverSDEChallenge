#include <bits/stdc++.h> 
//T.C = O(NlogN)
void merge(long long arr[],int n,int low,int mid,int high,long long &cnt)
{
    long long left=low;
    long long right=mid+1;
    vector<int> temp;
    while(left<=mid && right<=high)
    {
        if(arr[left]>arr[right])
        {
            temp.push_back(arr[right]);
            cnt+=(mid-left+1);
            right++;
        }
        else
        {
            temp.push_back(arr[left]);
            left++;
        }
    }
    while(left<=mid)
    {
        temp.push_back(arr[left]);
        left++;
    }
    while(right<=high)
    {
        temp.push_back(arr[right]);
        right++;
    }
    for(int i=low;i<=high;i++)
    {
        arr[i]=temp[i-low];
    }
}
void mS(long long arr[],int n,int low,int high,long long &cnt)
{
    if(low<high)
    {
        int mid=(low+high)/2;
        mS(arr,n,low,mid,cnt);
        mS(arr,n,mid+1,high,cnt);
        merge(arr,n,low,mid,high,cnt);
    }
}
long long getInversions(long long *arr, int n) {
    long long count=0;
    mS(arr,n,0,n-1,count);
    return count;
}



//T.C = O(N2)
// long long getInversions(long long *arr, int n){
//     // Write your code here.
//     long long cnt=0;
//     for(int i=0;i<n;i++)
//     {
//         for(int j=i+1;j<n;j++)
//         {
//             if(arr[i]>arr[j])   cnt++;
//         }
//     }
//     return cnt;
// }
