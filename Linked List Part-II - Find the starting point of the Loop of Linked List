/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(!head || !head->next)    return NULL;
        ListNode *slow=head, *fast=head;
        
        while(fast->next && fast->next->next)
        {
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast)
            {
                fast=head;
                while(slow!=fast)
                {
                    slow=slow->next;
                    fast=fast->next;
                }
                return fast;
            }
        }
        return NULL;    
    }
};



// class Solution {
// public:
//     ListNode *detectCycle(ListNode *head) {
//         if(!head || !head->next)    return NULL;
//         set<ListNode*> s;
//         while(head)
//         {
//             if(s.find(head)!=s.end())   return head;
//             s.insert(head);
//             head=head->next;
//         }
//         return NULL;
//     }
// };
