class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int n=nums.size();
        vector<int> v;
        int cnt1=0,cnt2=0,el1,el2;
        for(int i=0;i<n;i++)
        {
            if(cnt1==0 && nums[i]!=el2)
            {
                el1=nums[i];
                cnt1++;
            }
            else if(cnt2==0 && nums[i]!=el1)
            {
                el2=nums[i];
                cnt2++;
            }
            else if(nums[i]==el1)   cnt1++;
            else if(nums[i]==el2)   cnt2++;
            else
            {
                cnt1--;
                cnt2--;
            }
        }
        cnt1=0;cnt2=0;
            for(int i=0;i<n;i++)
            {
                if(nums[i]==el1)    cnt1++;
                else if(nums[i]==el2)   cnt2++;
            }
            if(cnt1>n/3)    v.push_back(el1);
            if(cnt2>n/3)    v.push_back(el2);
        return v;
    }
};


// class Solution {
// public:
//     vector<int> majorityElement(vector<int>& nums) {
//         int n=nums.size();
//         vector<int> v;
//         map<int,int> hsh;
//         int mini=(n/3)+1;
//         for(int i=0;i<n;i++)
//         {
//             hsh[nums[i]]++;
//             if(hsh[nums[i]]==mini) v.push_back(nums[i]);
//             if(v.size()==2) break;
//         }
//         return v;
//     }
// };


// class Solution {
// public:
//     vector<int> majorityElement(vector<int>& nums) {
//         int n=nums.size();
//         vector<int> v;
//         int cnt;
//         for(int i=0;i<n;i++)
//         {
//             cnt=0;
//             if(!v.size() || v[0]!=nums[i])
//             {
//                 for(int j=0;j<n;j++)
//                 {
//                     if(nums[j]==nums[i])    cnt++;
//                 }
//             }
//             if(cnt>n/3) v.push_back(nums[i]);
//             if(v.size()==2) break;
//         }
//         return v;
//     }
// };
