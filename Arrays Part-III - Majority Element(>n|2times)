                                                  //Moore's Voting Algorithm
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int element=nums[0],cnt=1;
        for(int i=1;i<nums.size();i++)
        {
            if(cnt==0)  element=nums[i];
            if(nums[i]==element)    cnt++;
            else    cnt--;
        }
        return element;    //Since, it's given that the element always exists

        //If element may or may not exist , then
        // if(cnt!=0)
        // {
        //     cnt=0;
        //     for(int i=0;i<nums.size();i++)
        //     {
        //         if(nums[i]==element)    cnt++;
        //         if(cnt>(nums.size()/2)) return element;
        //     }
        // }
        // return -1;
    }
};


//USING HASH MAP
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        map<int,int> hsh;      //unordered_map can also be used
        for(int i=0;i<nums.size();i++)
        {
            hsh[nums[i]]++;
        }
        for(auto it:hsh)
        {
            if(it.second>(nums.size()/2))   return it.first;
        }
        return -1;
    }
};
