class Solution
{
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    struct meeting {
       int start;
       int end;
       int ind;
    };
    bool static comparator(struct meeting m1, meeting m2) {
        if (m1.end < m2.end) return true;
        else if (m1.end > m2.end) return false;
        else if (m1.ind < m2.ind) return true;
        return false;
    }
    int maxMeetings(int start[], int end[], int n)
    {
        struct meeting meet[n];
        for (int i = 0; i < n; i++) {
            meet[i].start = start[i], meet[i].end = end[i], meet[i].ind = i + 1;
        }
        sort(meet, meet + n, comparator);
        vector<int> ans;
        
        int last = meet[0].end;
        ans.push_back(meet[0].ind);
        
        for(int i=1;i<n;i++)
        {
            if(meet[i].start>last)
            {
                last=meet[i].end;
                ans.push_back(meet[i].ind);
            }
        }
        return ans.size();
    }
};
